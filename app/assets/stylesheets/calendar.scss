/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

.calendar {
  $weekdays: 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday';
  ul {
    padding: 0;
  }
  .weekdays, .day-grid {
    display: grid;
    grid-template-columns: [monday] minmax(0, 1fr) [tuesday] minmax(0, 1fr) [wednesday] minmax(0, 1fr) [thursday] minmax(0, 1fr) [friday] minmax(0, 1fr) [saturday] minmax(0, 1fr) [sunday] minmax(0, 1fr);
    grid-gap: var(--bs-border-width);
    background-color: var(--bs-secondary-bg);
    margin: 0 auto;
  }

  @each $weekday in $weekdays {
    .#{$weekday} {
      grid-column-start: #{$weekday};
    }
  }

  .month {
    grid-column-start: 1;
    display: flex;
  }

  @for $i from 1 through 7 {
    .month.span-#{$i} {
      grid-column-end: span #{$i};
    }
    .filler.span-#{$i} {
      grid-column-start: span #{$i};
    }
  }

  li {
    list-style: none;
    margin-left: 0;
  }

  .weekdays > li, .day-grid > li {
    background-color: var(--bs-body-bg);
  }

  .weekdays {
    margin-bottom: 1em;
  }

  .day-grid > li:not(.month) {
    background-color: var(--bs-body-bg);
    min-height: 10rem;
  }

  .day-grid > li.today {
    background-color: var(--bs-tertiary-bg);
    border: var(--bs-border-width) var(--bs-border-style) var(--bs-info);
  }
  .hidden-info { display: none; }

  @include media-breakpoint-down(md) {
    .empty, .weekdays { display: none }
    .hidden-info { display: inline-block; }
    
    .day-grid {
      grid-template-columns: [monday tuesday wednesday thursday friday saturday sunday] minmax(0, 1fr);
    }

    .day-grid > li { min-height: 3rem!important; }
    .day-grid .badge {
      font-size: 1rem;
      font-weight: normal;
      padding: 1rem 0.75rem;
    }
    .month { background-color: var(--bs-body-bg); grid-column-end: span 1!important; }
  }
}

.form-destroy {
  .form-check-input {
    background: none;
    border: none;
    box-shadow: none;
    background-image: url("data:image/svg+xml,%3Csvg version='1.1' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' stroke='%23e01b24' stroke-linecap='round' stroke-linejoin='round' stroke-width='3'%3E%3Cpath d='m4 4 12 12'/%3E%3Cpath d='m4 16 12-12'/%3E%3C/svg%3E");
  }

  .form-check-input:checked {
    background: none;
    background-image: url("data:image/svg+xml,%3Csvg version='1.1' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='3'%3E%3Cpath d='m4.5101 10c0-3.866 3.134-7 7-7 3.866 0 7 3.134 7 7 0 3.866-3.134 7-7 7'/%3E%3Cpath d='m1.5184 10 2.9917 3 3.9988-3'/%3E%3C/svg%3E");
  }

  @include color-mode(dark) {
    .form-check-input:checked {
      background: none;
      background-image: url("data:image/svg+xml,%3Csvg version='1.1' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3'%3E%3Cpath d='m4.5101 10c0-3.866 3.134-7 7-7 3.866 0 7 3.134 7 7 0 3.866-3.134 7-7 7'/%3E%3Cpath d='m1.5184 10 2.9917 3 3.9988-3'/%3E%3C/svg%3E");
    }
  }

  .form-check-enabled {
    display: none;
  }

  .form-check-disabled {
    display: inline-block;
  }

  .form-check-input:checked {
    ~ .form-check-enabled {
      display: inline-block;
    }
    ~ .form-check-disabled {
      display: none;
    }
  }
}

:root {
  --cal-pink: #e83ed4;
  --cal-red: #e01b24;
  --cal-orange: #ff7800;
  --cal-yellow: #f6d32d;
  --cal-green: #33d17a;
  --cal-blue: #3584e4;
  --cal-indigo: #664ee4;
  --cal-purple: #9141ac;
}
$cal-colors: 'pink', 'red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'purple';
@each $color in $cal-colors {
  .text-bg-#{$color} {
    background-color: var(--cal-#{$color});
    color: black;
  }
}

.h-min {
  min-height: 16rem!important;
}
